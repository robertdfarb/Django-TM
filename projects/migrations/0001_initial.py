# Generated by Django 2.0.4 on 2018-04-28 14:45

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import projects.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DocumentManagement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(blank=True, upload_to=projects.models.DocumentManagement.upload_path)),
                ('approval_required', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('last_modified_date', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='documentcreator', to=settings.AUTH_USER_MODEL)),
                ('last_modified_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='documentmodifier', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='documentowner', to=settings.AUTH_USER_MODEL)),
                ('reviewer_assigned', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='documentreviewer', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Document',
                'verbose_name_plural': 'Documents',
            },
        ),
        migrations.CreateModel(
            name='MasterBillingCalendar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('calendar_month', models.CharField(max_length=6, unique=True)),
                ('closed_date', models.DateField(null=True)),
                ('closed_period', models.BooleanField(default=False)),
                ('start_date', models.DateField(null=True)),
                ('end_date', models.DateField(null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='billingcalendar', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MasterClient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('contact', models.CharField(blank=True, max_length=50)),
                ('phone', models.CharField(blank=True, max_length=50)),
                ('created_date', models.DateField(auto_now_add=True)),
                ('last_modified_date', models.DateField(auto_now_add=True)),
                ('last_contact_date', models.DateField(blank=True, null=True)),
                ('required_contact_days', models.IntegerField()),
                ('active', models.BooleanField(default=True)),
                ('billable', models.BooleanField(default=True)),
                ('slug', models.SlugField(max_length=40)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='creatorscalendar', to=settings.AUTH_USER_MODEL)),
                ('last_modified_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='modifierscalendar', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='ownerscalendar', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Client',
                'verbose_name_plural': 'Clients',
            },
        ),
        migrations.CreateModel(
            name='MasterTaskCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'verbose_name': 'MasterTaskCategory',
                'verbose_name_plural': 'MasterTaskCategory',
            },
        ),
        migrations.CreateModel(
            name='MasterTaskStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'verbose_name': 'MasterTaskType',
                'verbose_name_plural': 'MasterTaskTypes',
            },
        ),
        migrations.CreateModel(
            name='MasterTaskType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'verbose_name': 'MasterTaskType',
                'verbose_name_plural': 'MasterTaskTypes',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(error_messages={'unique': 'The project name must  be unique'}, max_length=100, unique=True)),
                ('created_date', models.DateField(auto_now_add=True)),
                ('billable', models.BooleanField(default=True)),
                ('last_modified_date', models.DateField(auto_now_add=True)),
                ('project_start_date', models.DateField(auto_now_add=True)),
                ('due_date', models.DateTimeField(blank=True, null=True)),
                ('budgeted_hrs', models.DecimalField(decimal_places=2, max_digits=8)),
                ('last_contact_date', models.DateField(blank=True, null=True)),
                ('required_contact_days', models.IntegerField()),
                ('comments', models.TextField(blank=True, default='')),
                ('completed_date', models.DateField(blank=True, null=True)),
                ('active', models.BooleanField(default=True)),
                ('slug', models.SlugField(max_length=40)),
            ],
            options={
                'verbose_name': 'Project',
                'verbose_name_plural': 'Projects',
            },
        ),
        migrations.CreateModel(
            name='ProjectUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project', models.ForeignKey(default='Unassigned', on_delete=django.db.models.deletion.PROTECT, related_name='projects', to='projects.Project')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='projectusers', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'ProjectUser',
                'verbose_name_plural': 'ProjectUserAssigned',
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=40)),
                ('parent', models.IntegerField(blank=True, null=True)),
                ('source_of_entry', models.CharField(blank=True, choices=[('U', 'UserCreated'), ('A', 'Assigned')], max_length=1)),
                ('billable', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('last_modified_date', models.DateTimeField(blank=True, null=True)),
                ('description', models.TextField(blank=True, default='', max_length=300)),
                ('due_date', models.DateTimeField(blank=True, null=True)),
                ('budgeted_hrs', models.DecimalField(decimal_places=2, max_digits=8)),
                ('completed_date', models.DateTimeField(blank=True, null=True)),
                ('active', models.BooleanField(default=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='tasktype', to='projects.MasterTaskCategory')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='taskcreator', to=settings.AUTH_USER_MODEL)),
                ('last_modified_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='taskmodifier', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='taskowner', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='projecttasks', to='projects.Project')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='taskstatus', to='projects.MasterTaskStatus')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='tasktype', to='projects.MasterTaskType')),
            ],
            options={
                'verbose_name': 'Task',
                'verbose_name_plural': 'Tasks',
            },
        ),
        migrations.CreateModel(
            name='TaskAssignment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_parent', models.IntegerField(blank=True)),
                ('assignor_notes', models.TextField(max_length=200)),
                ('assignee_notes', models.TextField(max_length=200)),
                ('active', models.BooleanField(default=True)),
                ('priority', models.IntegerField(blank=True)),
                ('assigned_date', models.DateField(blank=True, null=True)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='taskassigned', to='projects.Task')),
                ('user_assigned', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='assigneduser', to=settings.AUTH_USER_MODEL)),
                ('user_assigned_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='assignedbyuser', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'TaskAssignment',
                'verbose_name_plural': 'TaskAssignments',
                'ordering': ['priority'],
            },
        ),
        migrations.CreateModel(
            name='TimeLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source_of_entry', models.CharField(blank=True, choices=[('T', 'Timer'), ('M', 'Manual')], max_length=1)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('last_modified_date', models.DateTimeField(null=True)),
                ('date_time_started', models.DateTimeField(auto_now_add=True)),
                ('date_time_ended', models.DateTimeField(null=True)),
                ('comments', models.TextField(blank=True, default='', max_length=300)),
                ('actualhrs', models.DecimalField(decimal_places=2, max_digits=8)),
                ('billablehrs', models.DecimalField(decimal_places=2, max_digits=8)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='timeloggedcreator', to=settings.AUTH_USER_MODEL)),
                ('last_modified_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='timelogmodifier', to=settings.AUTH_USER_MODEL)),
                ('loggeduser', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='timeloggeduser', to=settings.AUTH_USER_MODEL)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='timeloggedtask', to='projects.Task')),
            ],
            options={
                'verbose_name': 'TimeLog',
                'verbose_name_plural': 'HoursLogged',
            },
        ),
        migrations.AddField(
            model_name='project',
            name='assigned_users',
            field=models.ManyToManyField(related_name='usersassigned', through='projects.ProjectUser', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='project',
            name='client',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='clientprojects', to='projects.MasterClient'),
        ),
        migrations.AddField(
            model_name='project',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='creatorsprojects', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='project',
            name='last_modified_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='modifiersprojects', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='project',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='ownersprojects', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='documentmanagement',
            name='task',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='documenttask', to='projects.Task'),
        ),
        migrations.AlterUniqueTogether(
            name='taskassignment',
            unique_together={('task', 'user_assigned', 'active')},
        ),
        migrations.AlterUniqueTogether(
            name='projectuser',
            unique_together={('project', 'user')},
        ),
    ]
